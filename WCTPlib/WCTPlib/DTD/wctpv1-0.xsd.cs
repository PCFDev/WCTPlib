// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.32989
//    <NameSpace>WCTPlib.v1r0</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>True</TrackingChangesEnable><GenTrackingClasses>True</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>True</UseBaseClass><GenBaseClass>True</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>Save</SaveToFileMethodName><LoadFromFileMethodName>Load</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace WCTPlib.v1r0 {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Specialized;
    using System.Runtime.Serialization;
    using System.Collections.ObjectModel;
    using System.Reflection;
    using System.IO;
    using System.Text;
    using System.Collections.Generic;
    
    
    #region Base entity class
    public partial class EntityBase<T> : System.ComponentModel.INotifyPropertyChanged
     {
        
        private ObjectChangeTracker changeTrackerField;
        
        private static System.Xml.Serialization.XmlSerializer serializer;
        
        [XmlIgnore()]
        public ObjectChangeTracker ChangeTracker {
            get {
                if ((this.changeTrackerField == null)) {
                    this.changeTrackerField = new ObjectChangeTracker(this);
                }
                return changeTrackerField;
            }
        }
        
        private static System.Xml.Serialization.XmlSerializer Serializer {
            get {
                if ((serializer == null)) {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(T));
                }
                return serializer;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public virtual void OnPropertyChanged(string propertyName, object value) {
            this.ChangeTracker.RecordCurrentValue(propertyName, value);
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null)) {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current EntityBase object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize() {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try {
                memoryStream = new System.IO.MemoryStream();
                Serializer.Serialize(memoryStream, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally {
                if ((streamReader != null)) {
                    streamReader.Dispose();
                }
                if ((memoryStream != null)) {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an EntityBase object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output EntityBase object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out T obj, out System.Exception exception) {
            exception = null;
            obj = default(T);
            try {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex) {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string xml, out T obj) {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }
        
        public static T Deserialize(string xml) {
            System.IO.StringReader stringReader = null;
            try {
                stringReader = new System.IO.StringReader(xml);
                return ((T)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally {
                if ((stringReader != null)) {
                    stringReader.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Serializes current EntityBase object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool Save(string fileName, out System.Exception exception) {
            exception = null;
            try {
                Save(fileName);
                return true;
            }
            catch (System.Exception e) {
                exception = e;
                return false;
            }
        }
        
        public virtual void Save(string fileName) {
            System.IO.StreamWriter streamWriter = null;
            try {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally {
                if ((streamWriter != null)) {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an EntityBase object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output EntityBase object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Load(string fileName, out T obj, out System.Exception exception) {
            exception = null;
            obj = default(T);
            try {
                obj = Load(fileName);
                return true;
            }
            catch (System.Exception ex) {
                exception = ex;
                return false;
            }
        }
        
        public static bool Load(string fileName, out T obj) {
            System.Exception exception = null;
            return Load(fileName, out obj, out exception);
        }
        
        public static T Load(string fileName) {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally {
                if ((file != null)) {
                    file.Dispose();
                }
                if ((sr != null)) {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }
    #endregion
    
    #region PropertyValueState class
    public class PropertyValueState {
        
        public string PropertyName { get; set; }
        public object OriginalValue { get; set; }
        public object CurrentValue { get; set; }
        public ObjectState State { get; set; }
    }
    #endregion
    
    #region ObjectStateChangingEventArgs class
    public class ObjectStateChangingEventArgs : EventArgs {
        
        public ObjectState NewState { get; set; }
    }
    #endregion
    
    #region ObjectList class
    public class ObjectList : List<object> {
    }
    #endregion
    
    #region ObjectState enum
    public enum ObjectState {
        
        Unchanged,
        
        Added,
        
        Modified,
        
        Deleted,
    }
    #endregion
    
    #region NotifyTrackableCollectionChangedEventHandler class
    public delegate void NotifyTrackableCollectionChangedEventHandler(object sender, NotifyCollectionChangedEventArgs e, string propertyName);
    #endregion
    
    #region Tracking changes class
    public class ObjectChangeTracker : System.ComponentModel.INotifyPropertyChanged {
        
       #region  Fields
        private bool isDeserializingField;
        private ObjectState originalobjectStateField = ObjectState.Added;
        private bool isInitilizedField = false;
        private readonly ObservableCollection<PropertyValueState> changeSetsField = new ObservableCollection<PropertyValueState>();
        private Delegate collectionChangedDelegateField = null;

        private bool objectTrackingEnabledField;
        private readonly object trackedObjectField;

        private PropertyValueStatesDictionary propertyValueStatesFields;
        //private ValueStatesDictionary valueStatesField;

        private ObjectsAddedToCollectionProperties objectsAddedToCollectionsField = new ObjectsAddedToCollectionProperties();
        private ObjectsRemovedFromCollectionProperties objectsRemovedFromCollectionsField = new ObjectsRemovedFromCollectionProperties();
        private ObjectsOriginalFromCollectionProperties objectsOriginalFromCollectionsField = new ObjectsOriginalFromCollectionProperties();
        #endregion

        public ObjectChangeTracker(object trackedObject)
        {
            trackedObjectField = trackedObject;
        }

        #region Events

        public event EventHandler<ObjectStateChangingEventArgs> ObjectStateChanging;

        #endregion

        protected virtual void OnObjectStateChanging(ObjectState newState)
        {
            if (ObjectStateChanging != null)
            {
                ObjectStateChanging(this, new ObjectStateChangingEventArgs() { NewState = newState });
            }
        }

        /// <summary>
        /// indicate current state
        /// </summary>
        private ObjectState stateField;

        /// <summary>
        /// Gets the state.
        /// </summary>
        /// <value>The state.</value>
        public ObjectState State
        {
            get
            {
                return stateField; 
            }
        }

        /// <summary>
        /// Updates the state of the change.
        /// </summary>
        private void UpdateChangeState()
        {
            ObjectState resultState = ObjectState.Added;
            this.changeSetsField.Clear();
            if (this.originalobjectStateField == ObjectState.Added)
            {
                if (stateField != ObjectState.Added)
                {
                    stateField = ObjectState.Added;
                    OnPropertyChanged("State");
                    OnObjectStateChanging(stateField);
                }
                return;
            }
            foreach (var propertyValuestate in PropertyValueStates)
            {
                if (propertyValuestate.Value.State == ObjectState.Modified)
                {
                    changeSetsField.Add(propertyValuestate.Value);
                    resultState = ObjectState.Modified;
                }
            }

            if (ObjectsRemovedFromCollectionProperties.Count > 0)
            {
                foreach (var objectsRemovedFromCollectionProperty in ObjectsRemovedFromCollectionProperties)
                {
                    foreach (var objectsRemoved in objectsRemovedFromCollectionProperty.Value)
                    {
                        changeSetsField.Add(new PropertyValueState() { PropertyName = objectsRemovedFromCollectionProperty.Key, State = ObjectState.Deleted, CurrentValue = objectsRemoved.ToString() });
                    }
                }
                resultState = ObjectState.Modified;
            }

            if (ObjectsAddedToCollectionProperties.Count > 0)
            {
                foreach (var objectsAddedFromCollectionProperty in ObjectsAddedToCollectionProperties)
                {
                    foreach (var objectsAdded in objectsAddedFromCollectionProperty.Value)
                    {
                        changeSetsField.Add(new PropertyValueState() { PropertyName = objectsAddedFromCollectionProperty.Key, State = ObjectState.Added, CurrentValue = objectsAdded.ToString() });
                    }
                }
                resultState = ObjectState.Modified;
            }

            if (resultState == ObjectState.Modified)
            {
                if (stateField != ObjectState.Modified)
                {
                    stateField = ObjectState.Modified;                    
                    OnPropertyChanged("State");
                    OnObjectStateChanging(stateField);
                }
                return;
            }
            if (stateField != this.originalobjectStateField)
            {
                stateField = this.originalobjectStateField;                
                OnPropertyChanged("State");
                OnObjectStateChanging(stateField);
            }
            return;
        }

        public ObservableCollection<PropertyValueState> ChangeSets 
        {
            get
            {
                return this.changeSetsField;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether [change tracking enabled].
        /// </summary>
        /// <value>
        /// 	<c>true</c> if [change tracking enabled]; otherwise, <c>false</c>.
        /// </value>
        public bool ObjectTrackingEnabled
        {
            get { return objectTrackingEnabledField; }
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StartTracking()
        {
            objectTrackingEnabledField = true;
            ResetTracking();
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StartTracking(bool keepLastRecords)
        {
            objectTrackingEnabledField = true;
            if (!keepLastRecords)
                StartTracking();
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StopTracking()
        {
            objectTrackingEnabledField = false;
        }

        // Resets the ObjectChangeTracker to the Unchanged state and
        // clears the original values as well as the record of changes
        // to collection properties
        public void ResetTracking()
        {
            if (this.objectTrackingEnabledField)
            {
                this.originalobjectStateField = ObjectState.Unchanged;
                ResetOriginalValue();
                ObjectsAddedToCollectionProperties.Clear();
                ObjectsRemovedFromCollectionProperties.Clear();
                ObjectsOriginalFromCollectionProperties.Clear();
                InitOriginalValue();
                UpdateChangeState();
            }
        }
        /// <summary>
        /// Inits the original value.
        /// </summary>
        private void InitOriginalValue()
        {
            var type = trackedObjectField.GetType();
            var propertyies = type.GetProperties();

            if (!isInitilizedField)
            {
                foreach (var propertyInfo in propertyies)
                {
                    if (!propertyInfo.Name.Equals("ChangeTracker") && !propertyInfo.Name.Equals("Item"))
                    {
                        object o = propertyInfo.GetValue(trackedObjectField, null);
                        if (propertyInfo.PropertyType.Name.Contains("TrackableCollection"))
                        {
                            var eventInfo = propertyInfo.PropertyType.GetEvent("TrackableCollectionChanged");
                            if (eventInfo != null)
                            {
                                Type tDelegate = eventInfo.EventHandlerType;
                                if (tDelegate != null)
                                {
                                    if (collectionChangedDelegateField == null)
                                        collectionChangedDelegateField = Delegate.CreateDelegate(tDelegate, this, "TrackableCollectionChanged");

                                    // Get the "add" accessor of the event and invoke it late bound, passing in the delegate instance. This is equivalent
                                    // to using the += operator in C#. The instance on which the "add" accessor is invoked.
                                    MethodInfo addHandler = eventInfo.GetAddMethod();
                                    Object[] addHandlerArgs = { collectionChangedDelegateField };
                                    addHandler.Invoke(o, addHandlerArgs);
                                }
                            }

                            var collection = o as IEnumerable;
                            if (collection != null)
                            {
                                foreach (var item in collection)
                                {
                                    RecordOriginalToCollectionProperties(propertyInfo.Name, item);
                                }
                            }
                        }
                        else
                        {
                            RecordCurrentValue(propertyInfo.Name, o);
                        }
                    }
                }
                isInitilizedField = true;
            }
        }

        /// <summary>
        /// Resets the original value.
        /// </summary>
        private void ResetOriginalValue()
        {
            PropertyValueStates.Clear();
            //ValueStates.Clear();

            if (isInitilizedField)
            {
                var type = trackedObjectField.GetType();
                var propertyies = type.GetProperties();
                foreach (var propertyInfo in propertyies)
                {
                    if (!propertyInfo.Name.Equals("ChangeTracker") && !propertyInfo.Name.Equals("Item"))
                    {
                        object o = propertyInfo.GetValue(trackedObjectField, null);
                        if (propertyInfo.PropertyType.Name.Contains("TrackableCollection"))
                        {
                            var eventInfo = propertyInfo.PropertyType.GetEvent("TrackableCollectionChanged");
                            if (eventInfo != null)
                            {
                                Type tDelegate = eventInfo.EventHandlerType;
                                if (tDelegate != null)
                                {
                                    if (collectionChangedDelegateField != null)
                                    {
                                        // Get the "remove" accessor of the event and invoke it latebound, passing in the delegate instance. This is equivalent
                                        // to using the += operator in C#. The instance on which the "add" accessor is invoked.
                                        MethodInfo removeHandler = eventInfo.GetRemoveMethod();
                                        Object[] addHandlerArgs = { collectionChangedDelegateField };
                                        removeHandler.Invoke(o, addHandlerArgs);
                                    }
                                }
                            }
                        }
                    }
                }
                isInitilizedField = false;
            }
        }

        /// <summary>
        /// Trackables the collection changed.
        /// </summary>
        /// <param name="sender">The sender.</param>
        /// <param name="e">The <see cref="NotifyTrackableCollectionChangedEventArgs"/> instance containing the event data.</param>
        /// <param name="propertyName">Name of the property.</param>
        private void TrackableCollectionChanged(object sender, NotifyCollectionChangedEventArgs e, string propertyName)
        {
            switch (e.Action)
            {
                case NotifyCollectionChangedAction.Add:
                    foreach (var newItem in e.NewItems)
                    {
                        //todo:implémenter la récursivité sur l'ajout des élements dans la collection
                        //var project = newItem as IObjectWithChangeTracker;
                        //if (project != null)
                        //{
                        //    if (this.ChangeTrackingEnabled)
                        //    {
                        //        project.ChangeTracker.Start();
                        //    }
                        //}
                        RecordAdditionToCollectionProperties(propertyName, newItem);
                    }
                    break;
                case NotifyCollectionChangedAction.Remove:
                    foreach (var odlItem in e.OldItems)
                    {
                        RecordRemovalFromCollectionProperties(propertyName, odlItem);
                    }
                    break;
                case NotifyCollectionChangedAction.Reset:
                    {
                        // Cas d'un Clear sur la collection.
                        // Vide le cache des modifications pour la collection.
                        if (ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName))
                        {
                            ObjectsRemovedFromCollectionProperties.Remove(propertyName);
                        }

                        if (ObjectsAddedToCollectionProperties.ContainsKey(propertyName))
                        {
                            ObjectsAddedToCollectionProperties.Remove(propertyName);
                        }

                        // Tranfère les données de départ dans les élements supprimés.
                        if (ObjectsOriginalFromCollectionProperties.Count > 0)
                        {
                            foreach (var item in ObjectsOriginalFromCollectionProperties[propertyName])
                            {
                                RecordRemovalFromCollectionProperties(propertyName, item);
                            }
                        }
                    }
                    break;
                case NotifyCollectionChangedAction.Replace:
                    {
                        // Comment gérer le cas d'un changement d'instance dans la liste ?
                    }
                    break;
            }
            UpdateChangeState();
        }

        #region public properties
        // Returns the removed objects to collection valued properties that were changed.
        //[DataMember]
        public ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties
        {
            get { return objectsRemovedFromCollectionsField ?? (objectsRemovedFromCollectionsField = new ObjectsRemovedFromCollectionProperties()); }
        }

        // Returns the original values for properties that were changed.
        //[DataMember]
        public PropertyValueStatesDictionary PropertyValueStates
        {
            get { return propertyValueStatesFields ?? (propertyValueStatesFields = new PropertyValueStatesDictionary()); }
        }

        // Returns the added objects to collection valued properties that were changed.
        //[DataMember]
        public ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties
        {
            get { return objectsAddedToCollectionsField ?? (objectsAddedToCollectionsField = new ObjectsAddedToCollectionProperties()); }
        }

        // Returns the added objects to collection valued properties that were changed.
        //[DataMember]
        public ObjectsOriginalFromCollectionProperties ObjectsOriginalFromCollectionProperties
        {
            get { return objectsOriginalFromCollectionsField ?? (objectsOriginalFromCollectionsField = new ObjectsOriginalFromCollectionProperties()); }
        }

        #region MethodsForChangeTrackingOnClient

        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            isDeserializingField = true;
        }

        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            isDeserializingField = false;
        }
        #endregion

        /// <summary>
        /// Captures the original value for a property that is changing.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        public void RecordCurrentValue(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                if (!PropertyValueStates.ContainsKey(propertyName))
                {
                    PropertyValueStates[propertyName] = new PropertyValueState() { PropertyName = propertyName, OriginalValue = value, CurrentValue = value, State = ObjectState.Unchanged };
                }
                // Compare original value new 
                else
                {
                    PropertyValueStates[propertyName].CurrentValue = value;
                    var originalValue = PropertyValueStates[propertyName].OriginalValue;
                    if (originalValue != null)
                    {
                        PropertyValueStates[propertyName].State = originalValue.Equals(value) ? ObjectState.Unchanged : ObjectState.Modified;
                    }
                    else
                    {
                        if (value == null)
                        {
                            PropertyValueStates[propertyName].State = ObjectState.Unchanged;
                        }
                        else
                        {
                            PropertyValueStates[propertyName].State = string.IsNullOrEmpty(value.ToString()) ? ObjectState.Unchanged : ObjectState.Modified;
                        }
                    }
                }
                UpdateChangeState();
            }
        }

        /// <summary>
        /// Records original items value of collection to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        private void RecordOriginalToCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                if (!ObjectsOriginalFromCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsOriginalFromCollectionProperties[propertyName] = new ObjectList();
                    ObjectsOriginalFromCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    ObjectsOriginalFromCollectionProperties[propertyName].Add(value);
                }
            }
        }


        /// <summary>
        /// Records an addition to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        private void RecordAdditionToCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                // Add the entity back after deleting it, we should do nothing here then
                if (ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName)
                    && ObjectsRemovedFromCollectionProperties[propertyName].Contains(value))
                {
                    ObjectsRemovedFromCollectionProperties[propertyName].Remove(value);
                    if (ObjectsRemovedFromCollectionProperties[propertyName].Count == 0)
                    {
                        ObjectsRemovedFromCollectionProperties.Remove(propertyName);
                    }
                    return;
                }

                if (!ObjectsAddedToCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsAddedToCollectionProperties[propertyName] = new ObjectList();
                    ObjectsAddedToCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    ObjectsAddedToCollectionProperties[propertyName].Add(value);
                }
            }
        }

        /// <summary>
        /// Records a removal to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The object value.</param>
        internal void RecordRemovalFromCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                // Delete the entity back after adding it, we should do nothing here then
                if (ObjectsAddedToCollectionProperties.ContainsKey(propertyName)
                    && ObjectsAddedToCollectionProperties[propertyName].Contains(value))
                {
                    ObjectsAddedToCollectionProperties[propertyName].Remove(value);
                    if (ObjectsAddedToCollectionProperties[propertyName].Count == 0)
                    {
                        ObjectsAddedToCollectionProperties.Remove(propertyName);
                    }
                    return;
                }

                if (!ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsRemovedFromCollectionProperties[propertyName] = new ObjectList();
                    ObjectsRemovedFromCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    if (!ObjectsRemovedFromCollectionProperties[propertyName].Contains(value))
                    {
                        ObjectsRemovedFromCollectionProperties[propertyName].Add(value);
                    }
                }
            }
        }
        #endregion

        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Called when [property changed].
        /// </summary>
        /// <param name="info">The info.</param>
        public virtual void OnPropertyChanged(string info)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if (handler != null)
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(info));
            }
        }
    }
    #endregion
    
    #region TrackableCollection class
    public class TrackableCollection<T> : ObservableCollection<T>
     {
        
        /// <summary>
        /// Name of property
        /// </summary>
        private string propertyNameField;

        /// <summary>
        /// Occurs when [trackable collection changed].
        /// </summary>
        public virtual event NotifyTrackableCollectionChangedEventHandler TrackableCollectionChanged;

        /// <summary>
        /// Initializes a new instance of the <see cref="TrackableCollection&lt;T&gt;"/> class.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        public TrackableCollection(string propertyName)
        {
            propertyNameField = propertyName;
            base.CollectionChanged += TrackableCollection_CollectionChanged;
        }

        /// <summary>
        /// Handles the CollectionChanged event of the TrackableCollection control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        void TrackableCollection_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (this.TrackableCollectionChanged != null)
            {
                this.TrackableCollectionChanged(sender, e, this.propertyNameField);
            }
        }


    }
    #endregion
    
    #region PropertyValueStatesDictionary
    public class PropertyValueStatesDictionary : Dictionary<string, PropertyValueState> {
    }
    #endregion
    
    #region ObjectsRemovedFromCollectionProperties
    public class ObjectsRemovedFromCollectionProperties : Dictionary<string, ObjectList> {
    }
    #endregion
    
    #region ObjectsAddedToCollectionProperties
    public class ObjectsAddedToCollectionProperties : Dictionary<string, ObjectList> {
    }
    #endregion
    
    #region ObjectsOriginalFromCollectionProperties
    public class ObjectsOriginalFromCollectionProperties : Dictionary<string, ObjectList> {
    }
    #endregion
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Operation", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpOperation : EntityBase<wctpOperation> {
        
        private object itemField;
        
        private string wctpVersionField;
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-BindDomainAlias", typeof(wctpBindDomainAlias))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientQuery", typeof(wctpClientQuery))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientQueryResponse", typeof(wctpClientQueryResponse))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-Confirmation", typeof(wctpConfirmation))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-LookupResponse", typeof(wctpLookupResponse))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-LookupSubscriber", typeof(wctpLookupSubscriber))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-MessageReply", typeof(wctpMessageReply))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-PollForMessages", typeof(wctpPollForMessages))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-PollResponse", typeof(wctpPollResponse))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-StatusInfo", typeof(wctpStatusInfo))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-SubmitClientMessage", typeof(wctpSubmitClientMessage))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-SubmitClientResponse", typeof(wctpSubmitClientResponse))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-SubmitRequest", typeof(wctpSubmitRequest))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string wctpVersion {
            get {
                return this.wctpVersionField;
            }
            set {
                if ((this.wctpVersionField != null)) {
                    if ((wctpVersionField.Equals(value) != true)) {
                        this.wctpVersionField = value;
                        this.OnPropertyChanged("wctpVersion", value);
                    }
                }
                else {
                    this.wctpVersionField = value;
                    this.OnPropertyChanged("wctpVersion", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-BindDomainAlias", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpBindDomainAlias : EntityBase<wctpBindDomainAlias> {
        
        private object itemField;
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-AddBinding", typeof(wctpAddBinding))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-ChangeSecurityCode", typeof(wctpChangeSecurityCode))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-DeleteBinding", typeof(wctpDeleteBinding))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-ModifyBinding", typeof(wctpModifyBinding))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-AddBinding", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpAddBinding : EntityBase<wctpAddBinding> {
        
        private string domainAliasField;
        
        private string deliverToURIField;
        
        private string securityCodeField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domainAlias {
            get {
                return this.domainAliasField;
            }
            set {
                if ((this.domainAliasField != null)) {
                    if ((domainAliasField.Equals(value) != true)) {
                        this.domainAliasField = value;
                        this.OnPropertyChanged("domainAlias", value);
                    }
                }
                else {
                    this.domainAliasField = value;
                    this.OnPropertyChanged("domainAlias", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deliverToURI {
            get {
                return this.deliverToURIField;
            }
            set {
                if ((this.deliverToURIField != null)) {
                    if ((deliverToURIField.Equals(value) != true)) {
                        this.deliverToURIField = value;
                        this.OnPropertyChanged("deliverToURI", value);
                    }
                }
                else {
                    this.deliverToURIField = value;
                    this.OnPropertyChanged("deliverToURI", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string securityCode {
            get {
                return this.securityCodeField;
            }
            set {
                if ((this.securityCodeField != null)) {
                    if ((securityCodeField.Equals(value) != true)) {
                        this.securityCodeField = value;
                        this.OnPropertyChanged("securityCode", value);
                    }
                }
                else {
                    this.securityCodeField = value;
                    this.OnPropertyChanged("securityCode", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ChangeSecurityCode", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpChangeSecurityCode : EntityBase<wctpChangeSecurityCode> {
        
        private string domainAliasField;
        
        private string oldSecurityCodeField;
        
        private string newSecurityCodeField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domainAlias {
            get {
                return this.domainAliasField;
            }
            set {
                if ((this.domainAliasField != null)) {
                    if ((domainAliasField.Equals(value) != true)) {
                        this.domainAliasField = value;
                        this.OnPropertyChanged("domainAlias", value);
                    }
                }
                else {
                    this.domainAliasField = value;
                    this.OnPropertyChanged("domainAlias", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string oldSecurityCode {
            get {
                return this.oldSecurityCodeField;
            }
            set {
                if ((this.oldSecurityCodeField != null)) {
                    if ((oldSecurityCodeField.Equals(value) != true)) {
                        this.oldSecurityCodeField = value;
                        this.OnPropertyChanged("oldSecurityCode", value);
                    }
                }
                else {
                    this.oldSecurityCodeField = value;
                    this.OnPropertyChanged("oldSecurityCode", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string newSecurityCode {
            get {
                return this.newSecurityCodeField;
            }
            set {
                if ((this.newSecurityCodeField != null)) {
                    if ((newSecurityCodeField.Equals(value) != true)) {
                        this.newSecurityCodeField = value;
                        this.OnPropertyChanged("newSecurityCode", value);
                    }
                }
                else {
                    this.newSecurityCodeField = value;
                    this.OnPropertyChanged("newSecurityCode", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-DeleteBinding", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpDeleteBinding : EntityBase<wctpDeleteBinding> {
        
        private string domainAliasField;
        
        private string securityCodeField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domainAlias {
            get {
                return this.domainAliasField;
            }
            set {
                if ((this.domainAliasField != null)) {
                    if ((domainAliasField.Equals(value) != true)) {
                        this.domainAliasField = value;
                        this.OnPropertyChanged("domainAlias", value);
                    }
                }
                else {
                    this.domainAliasField = value;
                    this.OnPropertyChanged("domainAlias", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string securityCode {
            get {
                return this.securityCodeField;
            }
            set {
                if ((this.securityCodeField != null)) {
                    if ((securityCodeField.Equals(value) != true)) {
                        this.securityCodeField = value;
                        this.OnPropertyChanged("securityCode", value);
                    }
                }
                else {
                    this.securityCodeField = value;
                    this.OnPropertyChanged("securityCode", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ModifyBinding", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpModifyBinding : EntityBase<wctpModifyBinding> {
        
        private string domainAliasField;
        
        private string deliverToURIField;
        
        private string securityCodeField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domainAlias {
            get {
                return this.domainAliasField;
            }
            set {
                if ((this.domainAliasField != null)) {
                    if ((domainAliasField.Equals(value) != true)) {
                        this.domainAliasField = value;
                        this.OnPropertyChanged("domainAlias", value);
                    }
                }
                else {
                    this.domainAliasField = value;
                    this.OnPropertyChanged("domainAlias", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deliverToURI {
            get {
                return this.deliverToURIField;
            }
            set {
                if ((this.deliverToURIField != null)) {
                    if ((deliverToURIField.Equals(value) != true)) {
                        this.deliverToURIField = value;
                        this.OnPropertyChanged("deliverToURI", value);
                    }
                }
                else {
                    this.deliverToURIField = value;
                    this.OnPropertyChanged("deliverToURI", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string securityCode {
            get {
                return this.securityCodeField;
            }
            set {
                if ((this.securityCodeField != null)) {
                    if ((securityCodeField.Equals(value) != true)) {
                        this.securityCodeField = value;
                        this.OnPropertyChanged("securityCode", value);
                    }
                }
                else {
                    this.securityCodeField = value;
                    this.OnPropertyChanged("securityCode", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientQuery", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientQuery : EntityBase<wctpClientQuery> {
        
        private string senderIDField;
        
        private string recipientIDField;
        
        private string trackingNumberField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string senderID {
            get {
                return this.senderIDField;
            }
            set {
                if ((this.senderIDField != null)) {
                    if ((senderIDField.Equals(value) != true)) {
                        this.senderIDField = value;
                        this.OnPropertyChanged("senderID", value);
                    }
                }
                else {
                    this.senderIDField = value;
                    this.OnPropertyChanged("senderID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string recipientID {
            get {
                return this.recipientIDField;
            }
            set {
                if ((this.recipientIDField != null)) {
                    if ((recipientIDField.Equals(value) != true)) {
                        this.recipientIDField = value;
                        this.OnPropertyChanged("recipientID", value);
                    }
                }
                else {
                    this.recipientIDField = value;
                    this.OnPropertyChanged("recipientID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string trackingNumber {
            get {
                return this.trackingNumberField;
            }
            set {
                if ((this.trackingNumberField != null)) {
                    if ((trackingNumberField.Equals(value) != true)) {
                        this.trackingNumberField = value;
                        this.OnPropertyChanged("trackingNumber", value);
                    }
                }
                else {
                    this.trackingNumberField = value;
                    this.OnPropertyChanged("trackingNumber", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientQueryResponse", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientQueryResponse : EntityBase<wctpClientQueryResponse> {
        
        private List<object> itemsField;
        
        private string minNextPollIntervalField;
        
        public wctpClientQueryResponse() {
            this.itemsField = new List<object>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientMessage", typeof(wctpClientMessage))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-Failure", typeof(wctpFailure))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-NoMessages", typeof(wctpNoMessages))]
        public List<object> Items {
            get {
                return this.itemsField;
            }
            set {
                if ((this.itemsField != null)) {
                    if ((itemsField.Equals(value) != true)) {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string minNextPollInterval {
            get {
                return this.minNextPollIntervalField;
            }
            set {
                if ((this.minNextPollIntervalField != null)) {
                    if ((minNextPollIntervalField.Equals(value) != true)) {
                        this.minNextPollIntervalField = value;
                        this.OnPropertyChanged("minNextPollInterval", value);
                    }
                }
                else {
                    this.minNextPollIntervalField = value;
                    this.OnPropertyChanged("minNextPollInterval", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientMessage", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientMessage : EntityBase<wctpClientMessage> {
        
        private object itemField;
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientMessageReply", typeof(wctpClientMessageReply))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientStatusInfo", typeof(wctpClientStatusInfo))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientMessageReply", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientMessageReply : EntityBase<wctpClientMessageReply> {
        
        private wctpClientResponseHeader wctpClientResponseHeaderField;
        
        private wctpPayload wctpPayloadField;
        
        public wctpClientMessageReply() {
            this.wctpPayloadField = new wctpPayload();
            this.wctpClientResponseHeaderField = new wctpClientResponseHeader();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientResponseHeader")]
        public wctpClientResponseHeader wctpClientResponseHeader {
            get {
                return this.wctpClientResponseHeaderField;
            }
            set {
                if ((this.wctpClientResponseHeaderField != null)) {
                    if ((wctpClientResponseHeaderField.Equals(value) != true)) {
                        this.wctpClientResponseHeaderField = value;
                        this.OnPropertyChanged("wctpClientResponseHeader", value);
                    }
                }
                else {
                    this.wctpClientResponseHeaderField = value;
                    this.OnPropertyChanged("wctpClientResponseHeader", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Payload")]
        public wctpPayload wctpPayload {
            get {
                return this.wctpPayloadField;
            }
            set {
                if ((this.wctpPayloadField != null)) {
                    if ((wctpPayloadField.Equals(value) != true)) {
                        this.wctpPayloadField = value;
                        this.OnPropertyChanged("wctpPayload", value);
                    }
                }
                else {
                    this.wctpPayloadField = value;
                    this.OnPropertyChanged("wctpPayload", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientResponseHeader", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientResponseHeader : EntityBase<wctpClientResponseHeader> {
        
        private wctpOriginator wctpOriginatorField;
        
        private wctpRecipient wctpRecipientField;
        
        private string responseTimestampField;
        
        private string respondingToTimestampField;
        
        public wctpClientResponseHeader() {
            this.wctpRecipientField = new wctpRecipient();
            this.wctpOriginatorField = new wctpOriginator();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Originator")]
        public wctpOriginator wctpOriginator {
            get {
                return this.wctpOriginatorField;
            }
            set {
                if ((this.wctpOriginatorField != null)) {
                    if ((wctpOriginatorField.Equals(value) != true)) {
                        this.wctpOriginatorField = value;
                        this.OnPropertyChanged("wctpOriginator", value);
                    }
                }
                else {
                    this.wctpOriginatorField = value;
                    this.OnPropertyChanged("wctpOriginator", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Recipient")]
        public wctpRecipient wctpRecipient {
            get {
                return this.wctpRecipientField;
            }
            set {
                if ((this.wctpRecipientField != null)) {
                    if ((wctpRecipientField.Equals(value) != true)) {
                        this.wctpRecipientField = value;
                        this.OnPropertyChanged("wctpRecipient", value);
                    }
                }
                else {
                    this.wctpRecipientField = value;
                    this.OnPropertyChanged("wctpRecipient", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string responseTimestamp {
            get {
                return this.responseTimestampField;
            }
            set {
                if ((this.responseTimestampField != null)) {
                    if ((responseTimestampField.Equals(value) != true)) {
                        this.responseTimestampField = value;
                        this.OnPropertyChanged("responseTimestamp", value);
                    }
                }
                else {
                    this.responseTimestampField = value;
                    this.OnPropertyChanged("responseTimestamp", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string respondingToTimestamp {
            get {
                return this.respondingToTimestampField;
            }
            set {
                if ((this.respondingToTimestampField != null)) {
                    if ((respondingToTimestampField.Equals(value) != true)) {
                        this.respondingToTimestampField = value;
                        this.OnPropertyChanged("respondingToTimestamp", value);
                    }
                }
                else {
                    this.respondingToTimestampField = value;
                    this.OnPropertyChanged("respondingToTimestamp", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Originator", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpOriginator : EntityBase<wctpOriginator> {
        
        private string senderIDField;
        
        private string securityCodeField;
        
        private string miscInfoField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string senderID {
            get {
                return this.senderIDField;
            }
            set {
                if ((this.senderIDField != null)) {
                    if ((senderIDField.Equals(value) != true)) {
                        this.senderIDField = value;
                        this.OnPropertyChanged("senderID", value);
                    }
                }
                else {
                    this.senderIDField = value;
                    this.OnPropertyChanged("senderID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string securityCode {
            get {
                return this.securityCodeField;
            }
            set {
                if ((this.securityCodeField != null)) {
                    if ((securityCodeField.Equals(value) != true)) {
                        this.securityCodeField = value;
                        this.OnPropertyChanged("securityCode", value);
                    }
                }
                else {
                    this.securityCodeField = value;
                    this.OnPropertyChanged("securityCode", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string miscInfo {
            get {
                return this.miscInfoField;
            }
            set {
                if ((this.miscInfoField != null)) {
                    if ((miscInfoField.Equals(value) != true)) {
                        this.miscInfoField = value;
                        this.OnPropertyChanged("miscInfo", value);
                    }
                }
                else {
                    this.miscInfoField = value;
                    this.OnPropertyChanged("miscInfo", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Recipient", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpRecipient : EntityBase<wctpRecipient> {
        
        private string recipientIDField;
        
        private string authorizationCodeField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string recipientID {
            get {
                return this.recipientIDField;
            }
            set {
                if ((this.recipientIDField != null)) {
                    if ((recipientIDField.Equals(value) != true)) {
                        this.recipientIDField = value;
                        this.OnPropertyChanged("recipientID", value);
                    }
                }
                else {
                    this.recipientIDField = value;
                    this.OnPropertyChanged("recipientID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string authorizationCode {
            get {
                return this.authorizationCodeField;
            }
            set {
                if ((this.authorizationCodeField != null)) {
                    if ((authorizationCodeField.Equals(value) != true)) {
                        this.authorizationCodeField = value;
                        this.OnPropertyChanged("authorizationCode", value);
                    }
                }
                else {
                    this.authorizationCodeField = value;
                    this.OnPropertyChanged("authorizationCode", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Payload", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpPayload : EntityBase<wctpPayload> {
        
        private object itemField;
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Alphanumeric", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-MCR", typeof(wctpMCR))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-TransparentData", typeof(wctpTransparentData))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-MCR", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpMCR : EntityBase<wctpMCR> {
        
        private string wctpMessageTextField;
        
        private List<string> wctpChoiceField;
        
        public wctpMCR() {
            this.wctpChoiceField = new List<string>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-MessageText")]
        public string wctpMessageText {
            get {
                return this.wctpMessageTextField;
            }
            set {
                if ((this.wctpMessageTextField != null)) {
                    if ((wctpMessageTextField.Equals(value) != true)) {
                        this.wctpMessageTextField = value;
                        this.OnPropertyChanged("wctpMessageText", value);
                    }
                }
                else {
                    this.wctpMessageTextField = value;
                    this.OnPropertyChanged("wctpMessageText", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Choice")]
        public List<string> wctpChoice {
            get {
                return this.wctpChoiceField;
            }
            set {
                if ((this.wctpChoiceField != null)) {
                    if ((wctpChoiceField.Equals(value) != true)) {
                        this.wctpChoiceField = value;
                        this.OnPropertyChanged("wctpChoice", value);
                    }
                }
                else {
                    this.wctpChoiceField = value;
                    this.OnPropertyChanged("wctpChoice", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-TransparentData", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpTransparentData : EntityBase<wctpTransparentData> {
        
        private wctpTransparentDataType typeField;
        
        private wctpTransparentDataEncoding encodingField;
        
        private string valueField;
        
        public wctpTransparentData() {
            this.typeField = wctpTransparentDataType.OPAQUE;
            this.encodingField = wctpTransparentDataEncoding.standard;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpTransparentDataType.OPAQUE)]
        public wctpTransparentDataType type {
            get {
                return this.typeField;
            }
            set {
                if ((typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.OnPropertyChanged("type", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpTransparentDataEncoding.standard)]
        public wctpTransparentDataEncoding encoding {
            get {
                return this.encodingField;
            }
            set {
                if ((encodingField.Equals(value) != true)) {
                    this.encodingField = value;
                    this.OnPropertyChanged("encoding", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField != null)) {
                    if ((valueField.Equals(value) != true)) {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpTransparentDataType {
        
        /// <remarks/>
        OPAQUE,
        
        /// <remarks/>
        FLEXSuite,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpTransparentDataEncoding {
        
        /// <remarks/>
        standard,
        
        /// <remarks/>
        base64,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientStatusInfo", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientStatusInfo : EntityBase<wctpClientStatusInfo> {
        
        private wctpClientResponseHeader wctpClientResponseHeaderField;
        
        private object itemField;
        
        public wctpClientStatusInfo() {
            this.wctpClientResponseHeaderField = new wctpClientResponseHeader();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientResponseHeader")]
        public wctpClientResponseHeader wctpClientResponseHeader {
            get {
                return this.wctpClientResponseHeaderField;
            }
            set {
                if ((this.wctpClientResponseHeaderField != null)) {
                    if ((wctpClientResponseHeaderField.Equals(value) != true)) {
                        this.wctpClientResponseHeaderField = value;
                        this.OnPropertyChanged("wctpClientResponseHeader", value);
                    }
                }
                else {
                    this.wctpClientResponseHeaderField = value;
                    this.OnPropertyChanged("wctpClientResponseHeader", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Failure", typeof(wctpFailure))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-Notification", typeof(wctpNotification))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Failure", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpFailure : EntityBase<wctpFailure> {
        
        private string errorCodeField;
        
        private string errorTextField;
        
        private string valueField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField != null)) {
                    if ((errorCodeField.Equals(value) != true)) {
                        this.errorCodeField = value;
                        this.OnPropertyChanged("errorCode", value);
                    }
                }
                else {
                    this.errorCodeField = value;
                    this.OnPropertyChanged("errorCode", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorText {
            get {
                return this.errorTextField;
            }
            set {
                if ((this.errorTextField != null)) {
                    if ((errorTextField.Equals(value) != true)) {
                        this.errorTextField = value;
                        this.OnPropertyChanged("errorText", value);
                    }
                }
                else {
                    this.errorTextField = value;
                    this.OnPropertyChanged("errorText", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField != null)) {
                    if ((valueField.Equals(value) != true)) {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Notification", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpNotification : EntityBase<wctpNotification> {
        
        private wctpNotificationType typeField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public wctpNotificationType type {
            get {
                return this.typeField;
            }
            set {
                if ((typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.OnPropertyChanged("type", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpNotificationType {
        
        /// <remarks/>
        QUEUED,
        
        /// <remarks/>
        DELIVERED,
        
        /// <remarks/>
        READ,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-NoMessages", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpNoMessages : EntityBase<wctpNoMessages> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Confirmation", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpConfirmation : EntityBase<wctpConfirmation> {
        
        private object itemField;
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Failure", typeof(wctpFailure))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-Success", typeof(wctpSuccess))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Success", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpSuccess : EntityBase<wctpSuccess> {
        
        private string successCodeField;
        
        private string successTextField;
        
        private string valueField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string successCode {
            get {
                return this.successCodeField;
            }
            set {
                if ((this.successCodeField != null)) {
                    if ((successCodeField.Equals(value) != true)) {
                        this.successCodeField = value;
                        this.OnPropertyChanged("successCode", value);
                    }
                }
                else {
                    this.successCodeField = value;
                    this.OnPropertyChanged("successCode", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string successText {
            get {
                return this.successTextField;
            }
            set {
                if ((this.successTextField != null)) {
                    if ((successTextField.Equals(value) != true)) {
                        this.successTextField = value;
                        this.OnPropertyChanged("successText", value);
                    }
                }
                else {
                    this.successTextField = value;
                    this.OnPropertyChanged("successText", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField != null)) {
                    if ((valueField.Equals(value) != true)) {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-LookupResponse", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpLookupResponse : EntityBase<wctpLookupResponse> {
        
        private wctpOriginator wctpOriginatorField;
        
        private wctpRecipient wctpRecipientField;
        
        private object itemField;
        
        private string responseToMessageIDField;
        
        private string transactionIDField;
        
        public wctpLookupResponse() {
            this.wctpRecipientField = new wctpRecipient();
            this.wctpOriginatorField = new wctpOriginator();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Originator")]
        public wctpOriginator wctpOriginator {
            get {
                return this.wctpOriginatorField;
            }
            set {
                if ((this.wctpOriginatorField != null)) {
                    if ((wctpOriginatorField.Equals(value) != true)) {
                        this.wctpOriginatorField = value;
                        this.OnPropertyChanged("wctpOriginator", value);
                    }
                }
                else {
                    this.wctpOriginatorField = value;
                    this.OnPropertyChanged("wctpOriginator", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Recipient")]
        public wctpRecipient wctpRecipient {
            get {
                return this.wctpRecipientField;
            }
            set {
                if ((this.wctpRecipientField != null)) {
                    if ((wctpRecipientField.Equals(value) != true)) {
                        this.wctpRecipientField = value;
                        this.OnPropertyChanged("wctpRecipient", value);
                    }
                }
                else {
                    this.wctpRecipientField = value;
                    this.OnPropertyChanged("wctpRecipient", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Failure", typeof(wctpFailure))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-LookupData", typeof(wctpLookupData))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string responseToMessageID {
            get {
                return this.responseToMessageIDField;
            }
            set {
                if ((this.responseToMessageIDField != null)) {
                    if ((responseToMessageIDField.Equals(value) != true)) {
                        this.responseToMessageIDField = value;
                        this.OnPropertyChanged("responseToMessageID", value);
                    }
                }
                else {
                    this.responseToMessageIDField = value;
                    this.OnPropertyChanged("responseToMessageID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string transactionID {
            get {
                return this.transactionIDField;
            }
            set {
                if ((this.transactionIDField != null)) {
                    if ((transactionIDField.Equals(value) != true)) {
                        this.transactionIDField = value;
                        this.OnPropertyChanged("transactionID", value);
                    }
                }
                else {
                    this.transactionIDField = value;
                    this.OnPropertyChanged("transactionID", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-LookupData", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpLookupData : EntityBase<wctpLookupData> {
        
        private string maxMessageLengthField;
        
        private wctpLookupDataMcrSupported mcrSupportedField;
        
        private bool mcrSupportedFieldSpecified;
        
        private wctpLookupDataCanRespond canRespondField;
        
        private bool canRespondFieldSpecified;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string maxMessageLength {
            get {
                return this.maxMessageLengthField;
            }
            set {
                if ((this.maxMessageLengthField != null)) {
                    if ((maxMessageLengthField.Equals(value) != true)) {
                        this.maxMessageLengthField = value;
                        this.OnPropertyChanged("maxMessageLength", value);
                    }
                }
                else {
                    this.maxMessageLengthField = value;
                    this.OnPropertyChanged("maxMessageLength", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public wctpLookupDataMcrSupported mcrSupported {
            get {
                return this.mcrSupportedField;
            }
            set {
                if ((mcrSupportedField.Equals(value) != true)) {
                    this.mcrSupportedField = value;
                    this.OnPropertyChanged("mcrSupported", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mcrSupportedSpecified {
            get {
                return this.mcrSupportedFieldSpecified;
            }
            set {
                if ((mcrSupportedFieldSpecified.Equals(value) != true)) {
                    this.mcrSupportedFieldSpecified = value;
                    this.OnPropertyChanged("mcrSupportedSpecified", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public wctpLookupDataCanRespond canRespond {
            get {
                return this.canRespondField;
            }
            set {
                if ((canRespondField.Equals(value) != true)) {
                    this.canRespondField = value;
                    this.OnPropertyChanged("canRespond", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool canRespondSpecified {
            get {
                return this.canRespondFieldSpecified;
            }
            set {
                if ((canRespondFieldSpecified.Equals(value) != true)) {
                    this.canRespondFieldSpecified = value;
                    this.OnPropertyChanged("canRespondSpecified", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpLookupDataMcrSupported {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpLookupDataCanRespond {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-LookupSubscriber", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpLookupSubscriber : EntityBase<wctpLookupSubscriber> {
        
        private wctpOriginator wctpOriginatorField;
        
        private wctpLookupMessageControl wctpLookupMessageControlField;
        
        private wctpRecipient wctpRecipientField;
        
        public wctpLookupSubscriber() {
            this.wctpRecipientField = new wctpRecipient();
            this.wctpLookupMessageControlField = new wctpLookupMessageControl();
            this.wctpOriginatorField = new wctpOriginator();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Originator")]
        public wctpOriginator wctpOriginator {
            get {
                return this.wctpOriginatorField;
            }
            set {
                if ((this.wctpOriginatorField != null)) {
                    if ((wctpOriginatorField.Equals(value) != true)) {
                        this.wctpOriginatorField = value;
                        this.OnPropertyChanged("wctpOriginator", value);
                    }
                }
                else {
                    this.wctpOriginatorField = value;
                    this.OnPropertyChanged("wctpOriginator", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-LookupMessageControl")]
        public wctpLookupMessageControl wctpLookupMessageControl {
            get {
                return this.wctpLookupMessageControlField;
            }
            set {
                if ((this.wctpLookupMessageControlField != null)) {
                    if ((wctpLookupMessageControlField.Equals(value) != true)) {
                        this.wctpLookupMessageControlField = value;
                        this.OnPropertyChanged("wctpLookupMessageControl", value);
                    }
                }
                else {
                    this.wctpLookupMessageControlField = value;
                    this.OnPropertyChanged("wctpLookupMessageControl", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Recipient")]
        public wctpRecipient wctpRecipient {
            get {
                return this.wctpRecipientField;
            }
            set {
                if ((this.wctpRecipientField != null)) {
                    if ((wctpRecipientField.Equals(value) != true)) {
                        this.wctpRecipientField = value;
                        this.OnPropertyChanged("wctpRecipient", value);
                    }
                }
                else {
                    this.wctpRecipientField = value;
                    this.OnPropertyChanged("wctpRecipient", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-LookupMessageControl", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpLookupMessageControl : EntityBase<wctpLookupMessageControl> {
        
        private string messageIDField;
        
        private string transactionIDField;
        
        private string sendResponsesToIDField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string messageID {
            get {
                return this.messageIDField;
            }
            set {
                if ((this.messageIDField != null)) {
                    if ((messageIDField.Equals(value) != true)) {
                        this.messageIDField = value;
                        this.OnPropertyChanged("messageID", value);
                    }
                }
                else {
                    this.messageIDField = value;
                    this.OnPropertyChanged("messageID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string transactionID {
            get {
                return this.transactionIDField;
            }
            set {
                if ((this.transactionIDField != null)) {
                    if ((transactionIDField.Equals(value) != true)) {
                        this.transactionIDField = value;
                        this.OnPropertyChanged("transactionID", value);
                    }
                }
                else {
                    this.transactionIDField = value;
                    this.OnPropertyChanged("transactionID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sendResponsesToID {
            get {
                return this.sendResponsesToIDField;
            }
            set {
                if ((this.sendResponsesToIDField != null)) {
                    if ((sendResponsesToIDField.Equals(value) != true)) {
                        this.sendResponsesToIDField = value;
                        this.OnPropertyChanged("sendResponsesToID", value);
                    }
                }
                else {
                    this.sendResponsesToIDField = value;
                    this.OnPropertyChanged("sendResponsesToID", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-MessageReply", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpMessageReply : EntityBase<wctpMessageReply> {
        
        private wctpResponseHeader wctpResponseHeaderField;
        
        private wctpPayload wctpPayloadField;
        
        public wctpMessageReply() {
            this.wctpPayloadField = new wctpPayload();
            this.wctpResponseHeaderField = new wctpResponseHeader();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ResponseHeader")]
        public wctpResponseHeader wctpResponseHeader {
            get {
                return this.wctpResponseHeaderField;
            }
            set {
                if ((this.wctpResponseHeaderField != null)) {
                    if ((wctpResponseHeaderField.Equals(value) != true)) {
                        this.wctpResponseHeaderField = value;
                        this.OnPropertyChanged("wctpResponseHeader", value);
                    }
                }
                else {
                    this.wctpResponseHeaderField = value;
                    this.OnPropertyChanged("wctpResponseHeader", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Payload")]
        public wctpPayload wctpPayload {
            get {
                return this.wctpPayloadField;
            }
            set {
                if ((this.wctpPayloadField != null)) {
                    if ((wctpPayloadField.Equals(value) != true)) {
                        this.wctpPayloadField = value;
                        this.OnPropertyChanged("wctpPayload", value);
                    }
                }
                else {
                    this.wctpPayloadField = value;
                    this.OnPropertyChanged("wctpPayload", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ResponseHeader", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpResponseHeader : EntityBase<wctpResponseHeader> {
        
        private wctpOriginator wctpOriginatorField;
        
        private wctpMessageControl wctpMessageControlField;
        
        private wctpRecipient wctpRecipientField;
        
        private string responseToMessageIDField;
        
        private string responseTimestampField;
        
        private string respondingToTimestampField;
        
        private string onBehalfOfRecipientIDField;
        
        public wctpResponseHeader() {
            this.wctpRecipientField = new wctpRecipient();
            this.wctpMessageControlField = new wctpMessageControl();
            this.wctpOriginatorField = new wctpOriginator();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Originator")]
        public wctpOriginator wctpOriginator {
            get {
                return this.wctpOriginatorField;
            }
            set {
                if ((this.wctpOriginatorField != null)) {
                    if ((wctpOriginatorField.Equals(value) != true)) {
                        this.wctpOriginatorField = value;
                        this.OnPropertyChanged("wctpOriginator", value);
                    }
                }
                else {
                    this.wctpOriginatorField = value;
                    this.OnPropertyChanged("wctpOriginator", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-MessageControl")]
        public wctpMessageControl wctpMessageControl {
            get {
                return this.wctpMessageControlField;
            }
            set {
                if ((this.wctpMessageControlField != null)) {
                    if ((wctpMessageControlField.Equals(value) != true)) {
                        this.wctpMessageControlField = value;
                        this.OnPropertyChanged("wctpMessageControl", value);
                    }
                }
                else {
                    this.wctpMessageControlField = value;
                    this.OnPropertyChanged("wctpMessageControl", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Recipient")]
        public wctpRecipient wctpRecipient {
            get {
                return this.wctpRecipientField;
            }
            set {
                if ((this.wctpRecipientField != null)) {
                    if ((wctpRecipientField.Equals(value) != true)) {
                        this.wctpRecipientField = value;
                        this.OnPropertyChanged("wctpRecipient", value);
                    }
                }
                else {
                    this.wctpRecipientField = value;
                    this.OnPropertyChanged("wctpRecipient", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string responseToMessageID {
            get {
                return this.responseToMessageIDField;
            }
            set {
                if ((this.responseToMessageIDField != null)) {
                    if ((responseToMessageIDField.Equals(value) != true)) {
                        this.responseToMessageIDField = value;
                        this.OnPropertyChanged("responseToMessageID", value);
                    }
                }
                else {
                    this.responseToMessageIDField = value;
                    this.OnPropertyChanged("responseToMessageID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string responseTimestamp {
            get {
                return this.responseTimestampField;
            }
            set {
                if ((this.responseTimestampField != null)) {
                    if ((responseTimestampField.Equals(value) != true)) {
                        this.responseTimestampField = value;
                        this.OnPropertyChanged("responseTimestamp", value);
                    }
                }
                else {
                    this.responseTimestampField = value;
                    this.OnPropertyChanged("responseTimestamp", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string respondingToTimestamp {
            get {
                return this.respondingToTimestampField;
            }
            set {
                if ((this.respondingToTimestampField != null)) {
                    if ((respondingToTimestampField.Equals(value) != true)) {
                        this.respondingToTimestampField = value;
                        this.OnPropertyChanged("respondingToTimestamp", value);
                    }
                }
                else {
                    this.respondingToTimestampField = value;
                    this.OnPropertyChanged("respondingToTimestamp", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string onBehalfOfRecipientID {
            get {
                return this.onBehalfOfRecipientIDField;
            }
            set {
                if ((this.onBehalfOfRecipientIDField != null)) {
                    if ((onBehalfOfRecipientIDField.Equals(value) != true)) {
                        this.onBehalfOfRecipientIDField = value;
                        this.OnPropertyChanged("onBehalfOfRecipientID", value);
                    }
                }
                else {
                    this.onBehalfOfRecipientIDField = value;
                    this.OnPropertyChanged("onBehalfOfRecipientID", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-MessageControl", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpMessageControl : EntityBase<wctpMessageControl> {
        
        private string messageIDField;
        
        private string transactionIDField;
        
        private string sendResponsesToIDField;
        
        private wctpMessageControlAllowResponse allowResponseField;
        
        private wctpMessageControlNotifyWhenQueued notifyWhenQueuedField;
        
        private wctpMessageControlNotifyWhenDelivered notifyWhenDeliveredField;
        
        private wctpMessageControlNotifyWhenRead notifyWhenReadField;
        
        private wctpMessageControlDeliveryPriority deliveryPriorityField;
        
        private string deliveryAfterField;
        
        private string deliveryBeforeField;
        
        private wctpMessageControlPreformatted preformattedField;
        
        private wctpMessageControlAllowTruncation allowTruncationField;
        
        public wctpMessageControl() {
            this.allowResponseField = wctpMessageControlAllowResponse.@true;
            this.notifyWhenQueuedField = wctpMessageControlNotifyWhenQueued.@false;
            this.notifyWhenDeliveredField = wctpMessageControlNotifyWhenDelivered.@false;
            this.notifyWhenReadField = wctpMessageControlNotifyWhenRead.@false;
            this.deliveryPriorityField = wctpMessageControlDeliveryPriority.NORMAL;
            this.preformattedField = wctpMessageControlPreformatted.@false;
            this.allowTruncationField = wctpMessageControlAllowTruncation.@true;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string messageID {
            get {
                return this.messageIDField;
            }
            set {
                if ((this.messageIDField != null)) {
                    if ((messageIDField.Equals(value) != true)) {
                        this.messageIDField = value;
                        this.OnPropertyChanged("messageID", value);
                    }
                }
                else {
                    this.messageIDField = value;
                    this.OnPropertyChanged("messageID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string transactionID {
            get {
                return this.transactionIDField;
            }
            set {
                if ((this.transactionIDField != null)) {
                    if ((transactionIDField.Equals(value) != true)) {
                        this.transactionIDField = value;
                        this.OnPropertyChanged("transactionID", value);
                    }
                }
                else {
                    this.transactionIDField = value;
                    this.OnPropertyChanged("transactionID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sendResponsesToID {
            get {
                return this.sendResponsesToIDField;
            }
            set {
                if ((this.sendResponsesToIDField != null)) {
                    if ((sendResponsesToIDField.Equals(value) != true)) {
                        this.sendResponsesToIDField = value;
                        this.OnPropertyChanged("sendResponsesToID", value);
                    }
                }
                else {
                    this.sendResponsesToIDField = value;
                    this.OnPropertyChanged("sendResponsesToID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpMessageControlAllowResponse.@true)]
        public wctpMessageControlAllowResponse allowResponse {
            get {
                return this.allowResponseField;
            }
            set {
                if ((allowResponseField.Equals(value) != true)) {
                    this.allowResponseField = value;
                    this.OnPropertyChanged("allowResponse", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpMessageControlNotifyWhenQueued.@false)]
        public wctpMessageControlNotifyWhenQueued notifyWhenQueued {
            get {
                return this.notifyWhenQueuedField;
            }
            set {
                if ((notifyWhenQueuedField.Equals(value) != true)) {
                    this.notifyWhenQueuedField = value;
                    this.OnPropertyChanged("notifyWhenQueued", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpMessageControlNotifyWhenDelivered.@false)]
        public wctpMessageControlNotifyWhenDelivered notifyWhenDelivered {
            get {
                return this.notifyWhenDeliveredField;
            }
            set {
                if ((notifyWhenDeliveredField.Equals(value) != true)) {
                    this.notifyWhenDeliveredField = value;
                    this.OnPropertyChanged("notifyWhenDelivered", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpMessageControlNotifyWhenRead.@false)]
        public wctpMessageControlNotifyWhenRead notifyWhenRead {
            get {
                return this.notifyWhenReadField;
            }
            set {
                if ((notifyWhenReadField.Equals(value) != true)) {
                    this.notifyWhenReadField = value;
                    this.OnPropertyChanged("notifyWhenRead", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpMessageControlDeliveryPriority.NORMAL)]
        public wctpMessageControlDeliveryPriority deliveryPriority {
            get {
                return this.deliveryPriorityField;
            }
            set {
                if ((deliveryPriorityField.Equals(value) != true)) {
                    this.deliveryPriorityField = value;
                    this.OnPropertyChanged("deliveryPriority", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deliveryAfter {
            get {
                return this.deliveryAfterField;
            }
            set {
                if ((this.deliveryAfterField != null)) {
                    if ((deliveryAfterField.Equals(value) != true)) {
                        this.deliveryAfterField = value;
                        this.OnPropertyChanged("deliveryAfter", value);
                    }
                }
                else {
                    this.deliveryAfterField = value;
                    this.OnPropertyChanged("deliveryAfter", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deliveryBefore {
            get {
                return this.deliveryBeforeField;
            }
            set {
                if ((this.deliveryBeforeField != null)) {
                    if ((deliveryBeforeField.Equals(value) != true)) {
                        this.deliveryBeforeField = value;
                        this.OnPropertyChanged("deliveryBefore", value);
                    }
                }
                else {
                    this.deliveryBeforeField = value;
                    this.OnPropertyChanged("deliveryBefore", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpMessageControlPreformatted.@false)]
        public wctpMessageControlPreformatted preformatted {
            get {
                return this.preformattedField;
            }
            set {
                if ((preformattedField.Equals(value) != true)) {
                    this.preformattedField = value;
                    this.OnPropertyChanged("preformatted", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpMessageControlAllowTruncation.@true)]
        public wctpMessageControlAllowTruncation allowTruncation {
            get {
                return this.allowTruncationField;
            }
            set {
                if ((allowTruncationField.Equals(value) != true)) {
                    this.allowTruncationField = value;
                    this.OnPropertyChanged("allowTruncation", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpMessageControlAllowResponse {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpMessageControlNotifyWhenQueued {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpMessageControlNotifyWhenDelivered {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpMessageControlNotifyWhenRead {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpMessageControlDeliveryPriority {
        
        /// <remarks/>
        HIGH,
        
        /// <remarks/>
        NORMAL,
        
        /// <remarks/>
        LOW,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpMessageControlPreformatted {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpMessageControlAllowTruncation {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-PollForMessages", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpPollForMessages : EntityBase<wctpPollForMessages> {
        
        private List<wctpMessageReceived> wctpMessageReceivedField;
        
        private string pollerIDField;
        
        private string securityCodeField;
        
        private string maxMessagesInBatchField;
        
        public wctpPollForMessages() {
            this.wctpMessageReceivedField = new List<wctpMessageReceived>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-MessageReceived")]
        public List<wctpMessageReceived> wctpMessageReceived {
            get {
                return this.wctpMessageReceivedField;
            }
            set {
                if ((this.wctpMessageReceivedField != null)) {
                    if ((wctpMessageReceivedField.Equals(value) != true)) {
                        this.wctpMessageReceivedField = value;
                        this.OnPropertyChanged("wctpMessageReceived", value);
                    }
                }
                else {
                    this.wctpMessageReceivedField = value;
                    this.OnPropertyChanged("wctpMessageReceived", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string pollerID {
            get {
                return this.pollerIDField;
            }
            set {
                if ((this.pollerIDField != null)) {
                    if ((pollerIDField.Equals(value) != true)) {
                        this.pollerIDField = value;
                        this.OnPropertyChanged("pollerID", value);
                    }
                }
                else {
                    this.pollerIDField = value;
                    this.OnPropertyChanged("pollerID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string securityCode {
            get {
                return this.securityCodeField;
            }
            set {
                if ((this.securityCodeField != null)) {
                    if ((securityCodeField.Equals(value) != true)) {
                        this.securityCodeField = value;
                        this.OnPropertyChanged("securityCode", value);
                    }
                }
                else {
                    this.securityCodeField = value;
                    this.OnPropertyChanged("securityCode", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string maxMessagesInBatch {
            get {
                return this.maxMessagesInBatchField;
            }
            set {
                if ((this.maxMessagesInBatchField != null)) {
                    if ((maxMessagesInBatchField.Equals(value) != true)) {
                        this.maxMessagesInBatchField = value;
                        this.OnPropertyChanged("maxMessagesInBatch", value);
                    }
                }
                else {
                    this.maxMessagesInBatchField = value;
                    this.OnPropertyChanged("maxMessagesInBatch", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-MessageReceived", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpMessageReceived : EntityBase<wctpMessageReceived> {
        
        private object itemField;
        
        private string sequenceNoField;
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Failure", typeof(wctpFailure))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-Success", typeof(wctpSuccess))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sequenceNo {
            get {
                return this.sequenceNoField;
            }
            set {
                if ((this.sequenceNoField != null)) {
                    if ((sequenceNoField.Equals(value) != true)) {
                        this.sequenceNoField = value;
                        this.OnPropertyChanged("sequenceNo", value);
                    }
                }
                else {
                    this.sequenceNoField = value;
                    this.OnPropertyChanged("sequenceNo", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-PollResponse", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpPollResponse : EntityBase<wctpPollResponse> {
        
        private List<object> itemsField;
        
        private string minNextPollIntervalField;
        
        public wctpPollResponse() {
            this.itemsField = new List<object>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Message", typeof(wctpMessage))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-NoMessages", typeof(wctpNoMessages))]
        public List<object> Items {
            get {
                return this.itemsField;
            }
            set {
                if ((this.itemsField != null)) {
                    if ((itemsField.Equals(value) != true)) {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string minNextPollInterval {
            get {
                return this.minNextPollIntervalField;
            }
            set {
                if ((this.minNextPollIntervalField != null)) {
                    if ((minNextPollIntervalField.Equals(value) != true)) {
                        this.minNextPollIntervalField = value;
                        this.OnPropertyChanged("minNextPollInterval", value);
                    }
                }
                else {
                    this.minNextPollIntervalField = value;
                    this.OnPropertyChanged("minNextPollInterval", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-Message", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpMessage : EntityBase<wctpMessage> {
        
        private object itemField;
        
        private string sequenceNoField;
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-LookupResponse", typeof(wctpLookupResponse))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-MessageReply", typeof(wctpMessageReply))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-StatusInfo", typeof(wctpStatusInfo))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-SubmitRequest", typeof(wctpSubmitRequest))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sequenceNo {
            get {
                return this.sequenceNoField;
            }
            set {
                if ((this.sequenceNoField != null)) {
                    if ((sequenceNoField.Equals(value) != true)) {
                        this.sequenceNoField = value;
                        this.OnPropertyChanged("sequenceNo", value);
                    }
                }
                else {
                    this.sequenceNoField = value;
                    this.OnPropertyChanged("sequenceNo", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-StatusInfo", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpStatusInfo : EntityBase<wctpStatusInfo> {
        
        private wctpResponseHeader wctpResponseHeaderField;
        
        private object itemField;
        
        public wctpStatusInfo() {
            this.wctpResponseHeaderField = new wctpResponseHeader();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ResponseHeader")]
        public wctpResponseHeader wctpResponseHeader {
            get {
                return this.wctpResponseHeaderField;
            }
            set {
                if ((this.wctpResponseHeaderField != null)) {
                    if ((wctpResponseHeaderField.Equals(value) != true)) {
                        this.wctpResponseHeaderField = value;
                        this.OnPropertyChanged("wctpResponseHeader", value);
                    }
                }
                else {
                    this.wctpResponseHeaderField = value;
                    this.OnPropertyChanged("wctpResponseHeader", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Failure", typeof(wctpFailure))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-Notification", typeof(wctpNotification))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-SubmitRequest", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpSubmitRequest : EntityBase<wctpSubmitRequest> {
        
        private wctpSubmitHeader wctpSubmitHeaderField;
        
        private wctpPayload wctpPayloadField;
        
        public wctpSubmitRequest() {
            this.wctpPayloadField = new wctpPayload();
            this.wctpSubmitHeaderField = new wctpSubmitHeader();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-SubmitHeader")]
        public wctpSubmitHeader wctpSubmitHeader {
            get {
                return this.wctpSubmitHeaderField;
            }
            set {
                if ((this.wctpSubmitHeaderField != null)) {
                    if ((wctpSubmitHeaderField.Equals(value) != true)) {
                        this.wctpSubmitHeaderField = value;
                        this.OnPropertyChanged("wctpSubmitHeader", value);
                    }
                }
                else {
                    this.wctpSubmitHeaderField = value;
                    this.OnPropertyChanged("wctpSubmitHeader", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Payload")]
        public wctpPayload wctpPayload {
            get {
                return this.wctpPayloadField;
            }
            set {
                if ((this.wctpPayloadField != null)) {
                    if ((wctpPayloadField.Equals(value) != true)) {
                        this.wctpPayloadField = value;
                        this.OnPropertyChanged("wctpPayload", value);
                    }
                }
                else {
                    this.wctpPayloadField = value;
                    this.OnPropertyChanged("wctpPayload", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-SubmitHeader", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpSubmitHeader : EntityBase<wctpSubmitHeader> {
        
        private wctpOriginator wctpOriginatorField;
        
        private wctpMessageControl wctpMessageControlField;
        
        private wctpRecipient wctpRecipientField;
        
        private string submitTimestampField;
        
        public wctpSubmitHeader() {
            this.wctpRecipientField = new wctpRecipient();
            this.wctpMessageControlField = new wctpMessageControl();
            this.wctpOriginatorField = new wctpOriginator();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Originator")]
        public wctpOriginator wctpOriginator {
            get {
                return this.wctpOriginatorField;
            }
            set {
                if ((this.wctpOriginatorField != null)) {
                    if ((wctpOriginatorField.Equals(value) != true)) {
                        this.wctpOriginatorField = value;
                        this.OnPropertyChanged("wctpOriginator", value);
                    }
                }
                else {
                    this.wctpOriginatorField = value;
                    this.OnPropertyChanged("wctpOriginator", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-MessageControl")]
        public wctpMessageControl wctpMessageControl {
            get {
                return this.wctpMessageControlField;
            }
            set {
                if ((this.wctpMessageControlField != null)) {
                    if ((wctpMessageControlField.Equals(value) != true)) {
                        this.wctpMessageControlField = value;
                        this.OnPropertyChanged("wctpMessageControl", value);
                    }
                }
                else {
                    this.wctpMessageControlField = value;
                    this.OnPropertyChanged("wctpMessageControl", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Recipient")]
        public wctpRecipient wctpRecipient {
            get {
                return this.wctpRecipientField;
            }
            set {
                if ((this.wctpRecipientField != null)) {
                    if ((wctpRecipientField.Equals(value) != true)) {
                        this.wctpRecipientField = value;
                        this.OnPropertyChanged("wctpRecipient", value);
                    }
                }
                else {
                    this.wctpRecipientField = value;
                    this.OnPropertyChanged("wctpRecipient", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string submitTimestamp {
            get {
                return this.submitTimestampField;
            }
            set {
                if ((this.submitTimestampField != null)) {
                    if ((submitTimestampField.Equals(value) != true)) {
                        this.submitTimestampField = value;
                        this.OnPropertyChanged("submitTimestamp", value);
                    }
                }
                else {
                    this.submitTimestampField = value;
                    this.OnPropertyChanged("submitTimestamp", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-SubmitClientMessage", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpSubmitClientMessage : EntityBase<wctpSubmitClientMessage> {
        
        private wctpSubmitClientHeader wctpSubmitClientHeaderField;
        
        private wctpPayload wctpPayloadField;
        
        public wctpSubmitClientMessage() {
            this.wctpPayloadField = new wctpPayload();
            this.wctpSubmitClientHeaderField = new wctpSubmitClientHeader();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-SubmitClientHeader")]
        public wctpSubmitClientHeader wctpSubmitClientHeader {
            get {
                return this.wctpSubmitClientHeaderField;
            }
            set {
                if ((this.wctpSubmitClientHeaderField != null)) {
                    if ((wctpSubmitClientHeaderField.Equals(value) != true)) {
                        this.wctpSubmitClientHeaderField = value;
                        this.OnPropertyChanged("wctpSubmitClientHeader", value);
                    }
                }
                else {
                    this.wctpSubmitClientHeaderField = value;
                    this.OnPropertyChanged("wctpSubmitClientHeader", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Payload")]
        public wctpPayload wctpPayload {
            get {
                return this.wctpPayloadField;
            }
            set {
                if ((this.wctpPayloadField != null)) {
                    if ((wctpPayloadField.Equals(value) != true)) {
                        this.wctpPayloadField = value;
                        this.OnPropertyChanged("wctpPayload", value);
                    }
                }
                else {
                    this.wctpPayloadField = value;
                    this.OnPropertyChanged("wctpPayload", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-SubmitClientHeader", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpSubmitClientHeader : EntityBase<wctpSubmitClientHeader> {
        
        private wctpClientOriginator wctpClientOriginatorField;
        
        private wctpClientMessageControl wctpClientMessageControlField;
        
        private wctpRecipient wctpRecipientField;
        
        private string submitTimestampField;
        
        public wctpSubmitClientHeader() {
            this.wctpRecipientField = new wctpRecipient();
            this.wctpClientMessageControlField = new wctpClientMessageControl();
            this.wctpClientOriginatorField = new wctpClientOriginator();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientOriginator")]
        public wctpClientOriginator wctpClientOriginator {
            get {
                return this.wctpClientOriginatorField;
            }
            set {
                if ((this.wctpClientOriginatorField != null)) {
                    if ((wctpClientOriginatorField.Equals(value) != true)) {
                        this.wctpClientOriginatorField = value;
                        this.OnPropertyChanged("wctpClientOriginator", value);
                    }
                }
                else {
                    this.wctpClientOriginatorField = value;
                    this.OnPropertyChanged("wctpClientOriginator", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientMessageControl")]
        public wctpClientMessageControl wctpClientMessageControl {
            get {
                return this.wctpClientMessageControlField;
            }
            set {
                if ((this.wctpClientMessageControlField != null)) {
                    if ((wctpClientMessageControlField.Equals(value) != true)) {
                        this.wctpClientMessageControlField = value;
                        this.OnPropertyChanged("wctpClientMessageControl", value);
                    }
                }
                else {
                    this.wctpClientMessageControlField = value;
                    this.OnPropertyChanged("wctpClientMessageControl", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-Recipient")]
        public wctpRecipient wctpRecipient {
            get {
                return this.wctpRecipientField;
            }
            set {
                if ((this.wctpRecipientField != null)) {
                    if ((wctpRecipientField.Equals(value) != true)) {
                        this.wctpRecipientField = value;
                        this.OnPropertyChanged("wctpRecipient", value);
                    }
                }
                else {
                    this.wctpRecipientField = value;
                    this.OnPropertyChanged("wctpRecipient", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string submitTimestamp {
            get {
                return this.submitTimestampField;
            }
            set {
                if ((this.submitTimestampField != null)) {
                    if ((submitTimestampField.Equals(value) != true)) {
                        this.submitTimestampField = value;
                        this.OnPropertyChanged("submitTimestamp", value);
                    }
                }
                else {
                    this.submitTimestampField = value;
                    this.OnPropertyChanged("submitTimestamp", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientOriginator", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientOriginator : EntityBase<wctpClientOriginator> {
        
        private string senderIDField;
        
        private string miscInfoField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string senderID {
            get {
                return this.senderIDField;
            }
            set {
                if ((this.senderIDField != null)) {
                    if ((senderIDField.Equals(value) != true)) {
                        this.senderIDField = value;
                        this.OnPropertyChanged("senderID", value);
                    }
                }
                else {
                    this.senderIDField = value;
                    this.OnPropertyChanged("senderID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string miscInfo {
            get {
                return this.miscInfoField;
            }
            set {
                if ((this.miscInfoField != null)) {
                    if ((miscInfoField.Equals(value) != true)) {
                        this.miscInfoField = value;
                        this.OnPropertyChanged("miscInfo", value);
                    }
                }
                else {
                    this.miscInfoField = value;
                    this.OnPropertyChanged("miscInfo", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientMessageControl", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientMessageControl : EntityBase<wctpClientMessageControl> {
        
        private string sendResponsesToIDField;
        
        private wctpClientMessageControlAllowResponse allowResponseField;
        
        private wctpClientMessageControlNotifyWhenQueued notifyWhenQueuedField;
        
        private wctpClientMessageControlNotifyWhenDelivered notifyWhenDeliveredField;
        
        private wctpClientMessageControlNotifyWhenRead notifyWhenReadField;
        
        private wctpClientMessageControlDeliveryPriority deliveryPriorityField;
        
        private string deliveryAfterField;
        
        private string deliveryBeforeField;
        
        private wctpClientMessageControlPreformatted preformattedField;
        
        private wctpClientMessageControlAllowTruncation allowTruncationField;
        
        public wctpClientMessageControl() {
            this.allowResponseField = wctpClientMessageControlAllowResponse.@true;
            this.notifyWhenQueuedField = wctpClientMessageControlNotifyWhenQueued.@false;
            this.notifyWhenDeliveredField = wctpClientMessageControlNotifyWhenDelivered.@false;
            this.notifyWhenReadField = wctpClientMessageControlNotifyWhenRead.@false;
            this.deliveryPriorityField = wctpClientMessageControlDeliveryPriority.NORMAL;
            this.preformattedField = wctpClientMessageControlPreformatted.@false;
            this.allowTruncationField = wctpClientMessageControlAllowTruncation.@true;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string sendResponsesToID {
            get {
                return this.sendResponsesToIDField;
            }
            set {
                if ((this.sendResponsesToIDField != null)) {
                    if ((sendResponsesToIDField.Equals(value) != true)) {
                        this.sendResponsesToIDField = value;
                        this.OnPropertyChanged("sendResponsesToID", value);
                    }
                }
                else {
                    this.sendResponsesToIDField = value;
                    this.OnPropertyChanged("sendResponsesToID", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpClientMessageControlAllowResponse.@true)]
        public wctpClientMessageControlAllowResponse allowResponse {
            get {
                return this.allowResponseField;
            }
            set {
                if ((allowResponseField.Equals(value) != true)) {
                    this.allowResponseField = value;
                    this.OnPropertyChanged("allowResponse", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpClientMessageControlNotifyWhenQueued.@false)]
        public wctpClientMessageControlNotifyWhenQueued notifyWhenQueued {
            get {
                return this.notifyWhenQueuedField;
            }
            set {
                if ((notifyWhenQueuedField.Equals(value) != true)) {
                    this.notifyWhenQueuedField = value;
                    this.OnPropertyChanged("notifyWhenQueued", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpClientMessageControlNotifyWhenDelivered.@false)]
        public wctpClientMessageControlNotifyWhenDelivered notifyWhenDelivered {
            get {
                return this.notifyWhenDeliveredField;
            }
            set {
                if ((notifyWhenDeliveredField.Equals(value) != true)) {
                    this.notifyWhenDeliveredField = value;
                    this.OnPropertyChanged("notifyWhenDelivered", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpClientMessageControlNotifyWhenRead.@false)]
        public wctpClientMessageControlNotifyWhenRead notifyWhenRead {
            get {
                return this.notifyWhenReadField;
            }
            set {
                if ((notifyWhenReadField.Equals(value) != true)) {
                    this.notifyWhenReadField = value;
                    this.OnPropertyChanged("notifyWhenRead", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpClientMessageControlDeliveryPriority.NORMAL)]
        public wctpClientMessageControlDeliveryPriority deliveryPriority {
            get {
                return this.deliveryPriorityField;
            }
            set {
                if ((deliveryPriorityField.Equals(value) != true)) {
                    this.deliveryPriorityField = value;
                    this.OnPropertyChanged("deliveryPriority", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deliveryAfter {
            get {
                return this.deliveryAfterField;
            }
            set {
                if ((this.deliveryAfterField != null)) {
                    if ((deliveryAfterField.Equals(value) != true)) {
                        this.deliveryAfterField = value;
                        this.OnPropertyChanged("deliveryAfter", value);
                    }
                }
                else {
                    this.deliveryAfterField = value;
                    this.OnPropertyChanged("deliveryAfter", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deliveryBefore {
            get {
                return this.deliveryBeforeField;
            }
            set {
                if ((this.deliveryBeforeField != null)) {
                    if ((deliveryBeforeField.Equals(value) != true)) {
                        this.deliveryBeforeField = value;
                        this.OnPropertyChanged("deliveryBefore", value);
                    }
                }
                else {
                    this.deliveryBeforeField = value;
                    this.OnPropertyChanged("deliveryBefore", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpClientMessageControlPreformatted.@false)]
        public wctpClientMessageControlPreformatted preformatted {
            get {
                return this.preformattedField;
            }
            set {
                if ((preformattedField.Equals(value) != true)) {
                    this.preformattedField = value;
                    this.OnPropertyChanged("preformatted", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(wctpClientMessageControlAllowTruncation.@true)]
        public wctpClientMessageControlAllowTruncation allowTruncation {
            get {
                return this.allowTruncationField;
            }
            set {
                if ((allowTruncationField.Equals(value) != true)) {
                    this.allowTruncationField = value;
                    this.OnPropertyChanged("allowTruncation", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpClientMessageControlAllowResponse {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpClientMessageControlNotifyWhenQueued {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpClientMessageControlNotifyWhenDelivered {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpClientMessageControlNotifyWhenRead {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpClientMessageControlDeliveryPriority {
        
        /// <remarks/>
        HIGH,
        
        /// <remarks/>
        NORMAL,
        
        /// <remarks/>
        LOW,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpClientMessageControlPreformatted {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    public enum wctpClientMessageControlAllowTruncation {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-SubmitClientResponse", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpSubmitClientResponse : EntityBase<wctpSubmitClientResponse> {
        
        private object itemField;
        
        [System.Xml.Serialization.XmlElementAttribute("wctp-ClientSuccess", typeof(wctpClientSuccess))]
        [System.Xml.Serialization.XmlElementAttribute("wctp-Failure", typeof(wctpFailure))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                if ((this.itemField != null)) {
                    if ((itemField.Equals(value) != true)) {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-ClientSuccess", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpClientSuccess : EntityBase<wctpClientSuccess> {
        
        private string successCodeField;
        
        private string successTextField;
        
        private string trackingNumberField;
        
        private string valueField;
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string successCode {
            get {
                return this.successCodeField;
            }
            set {
                if ((this.successCodeField != null)) {
                    if ((successCodeField.Equals(value) != true)) {
                        this.successCodeField = value;
                        this.OnPropertyChanged("successCode", value);
                    }
                }
                else {
                    this.successCodeField = value;
                    this.OnPropertyChanged("successCode", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string successText {
            get {
                return this.successTextField;
            }
            set {
                if ((this.successTextField != null)) {
                    if ((successTextField.Equals(value) != true)) {
                        this.successTextField = value;
                        this.OnPropertyChanged("successText", value);
                    }
                }
                else {
                    this.successTextField = value;
                    this.OnPropertyChanged("successText", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string trackingNumber {
            get {
                return this.trackingNumberField;
            }
            set {
                if ((this.trackingNumberField != null)) {
                    if ((trackingNumberField.Equals(value) != true)) {
                        this.trackingNumberField = value;
                        this.OnPropertyChanged("trackingNumber", value);
                    }
                }
                else {
                    this.trackingNumberField = value;
                    this.OnPropertyChanged("trackingNumber", value);
                }
            }
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField != null)) {
                    if ((valueField.Equals(value) != true)) {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-StatusRequest", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpStatusRequest : EntityBase<wctpStatusRequest> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/wctpv1-0")]
    [System.Xml.Serialization.XmlRootAttribute("wctp-CancelRequest", Namespace="http://tempuri.org/wctpv1-0", IsNullable=false)]
    public partial class wctpCancelRequest : EntityBase<wctpCancelRequest> {
    }
}
